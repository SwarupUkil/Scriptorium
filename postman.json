{
	"info": {
		"_postman_id": "b0f5a8a3-6ec6-475a-ac35-9558f12ba415",
		"name": "CSC309 Scriptorium Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39464195",
		"_collection_link": "https://scriptors-3168.postman.co/workspace/CSC309-Scriptorium~79d6206e-6c5a-4418-bf2b-30857944289d/collection/39464195-b0f5a8a3-6ec6-475a-ac35-9558f12ba415?action=share&source=collection_link&creator=39464195"
	},
	"item": [
		{
			"name": "Blog and Comments",
			"item": [
				{
					"name": "Create Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"How to Program\",\n    \"description\": \"It requires faith.\",\n    \"tags\": \"c++,java,python,c\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/posts/blogs/users/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"posts",
								"blogs",
								"users",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Blog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//   \"templates\": [",
									"//     {",
									"//       \"id\": 1,",
									"//       \"title\": \"Java Starter Template\",",
									"//       \"language\": \"java\",",
									"//       \"code\": \"public class Main { public static void main(String[] args) { System.out.println('Hello World'); } }\"",
									"//     },",
									"//     {",
									"//       \"id\": 2,",
									"//       \"title\": \"Python Basics\",",
									"//       \"language\": \"python\",",
									"//       \"code\": \"print('Hello, World!')\"",
									"//     }",
									"//   ]"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"2\",\n  \"title\": \"Introduction to Programming\",\n  \"description\": \"A beginner's guide to programming concepts and languages.\",\n  \"tags\": \"java,python,c++,javascript\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/posts/blogs/users/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"posts",
								"blogs",
								"users",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"description": "This is the postId for the blog.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"id\": \"3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/posts/blogs/users/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"posts",
								"blogs",
								"users",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 2,\n    \"description\": \"Deeply insightful, thank you very much for this.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/posts/comments/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"posts",
								"comments",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Blogs",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/posts/blogs?skip=0&take=10&blogTitle=introduction&desiredContent=guide&blogTags=javascript,python,c++&templateTitle=Starter",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"posts",
								"blogs"
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "take",
									"value": "10"
								},
								{
									"key": "blogTitle",
									"value": "introduction"
								},
								{
									"key": "desiredContent",
									"value": "guide"
								},
								{
									"key": "blogTags",
									"value": "javascript,python,c++"
								},
								{
									"key": "templateTitle",
									"value": "Starter"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/posts/blogs/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"posts",
								"blogs",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Vote",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"2\",\n    \"rating\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/posts/shared/vote",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"posts",
								"shared",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Replies",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"2\",\n    \"skip\": \"0\",\n    \"take\": \"5\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/posts/shared/replies",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"posts",
								"shared",
								"replies"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Code Execution",
			"item": [
				{
					"name": "Java",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"public class HelloWorld { public static void main(String[] args) { System.out.println(\\\"Hello, world!\\\"); } }\",\r\n  \"language\": \"java\",\r\n  \"stdin\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "JavaScript",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"javascript\",\r\n  \"code\": \"console.log('JavaScript execution');\",\r\n  \"stdin\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Python",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"python\",\r\n  \"code\": \"name = input()\\nprint('Hello, ' + name)\",\r\n  \"stdin\": \"Alice\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Multiline Python",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"python\",\r\n  \"code\": \"for i in range(1, 3):\\n\\tx = input()\\n\\tprint(x)\",\r\n  \"stdin\": \"Alice\\nBob\\nSarah\\n\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "C",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"#include <stdio.h>\\nint main() { char input[50]; fgets(input, 50, stdin); printf(\\\"%s\\\", input); return 0; }\",\r\n  \"language\": \"c\",\r\n  \"stdin\": \"Hello, world!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "C++",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"#include <iostream>\\nusing namespace std;\\nint main() { string input; getline(cin, input); cout << input; return 0; }\",\r\n  \"language\": \"cpp\",\r\n  \"stdin\": \"Hello, world!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Java Input",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"import java.util.Scanner;\\npublic class code { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.println(scanner.nextLine()); } }\",\r\n  \"language\": \"java\",\r\n  \"stdin\": \"Hello, world!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "JavaScript Error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"language\": \"javascript\",\r\n  \"code\": \"console.lo('JavaScript execution');\",\r\n  \"stdin\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Flag and Report",
			"item": [
				{
					"name": "Report Post",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"5\",\n    \"explanation\": \"duplicate blog post\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/posts/reports",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"posts",
								"reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Reports",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/posts/reports/admin?skip=0&take=10",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"posts",
								"reports",
								"admin"
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "take",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Flag Post",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.environment.set(\"authToken\", jsonData.accessToken);",
									"pm.environment.set(\"refreshToken\", jsonData.refreshToken);",
									"",
									"",
									"// {",
									"//   \"username\": \"test2\",",
									"//   \"password\": \"test2\"",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"test\",\r\n  \"password\": \"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "test",
									"disabled": true
								},
								{
									"key": "password",
									"value": "test",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"// {",
									"//     \"username\": \"test\",",
									"//     \"password\": \"test\",",
									"//     \"firstName\": \"Arup\",",
									"//     \"lastName\": \"Ukil\",",
									"//     \"email\": \"ar@gmail.com\",",
									"//     \"phoneNumber\": \"123\"",
									"// }",
									"// {",
									"//     \"username\": \"test2\",",
									"//     \"password\": \"test2\",",
									"//     \"firstName\": \"Swarup\",",
									"//     \"lastName\": \"U\",",
									"//     \"email\": \"sw@gmail.com\",",
									"//     \"phoneNumber\": \"123\"",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test\",\r\n    \"password\": \"test\",\r\n    \"firstName\": \"Arup\",\r\n    \"lastName\": \"Ukil\",\r\n    \"email\": \"ar@gmail.com\",\r\n    \"phoneNumber\": \"123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.environment.set(\"authToken\", jsonData.accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"refreshToken\": \"{{refreshToken}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/refresh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile Edit",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test\",\r\n    \"firstName\": \"A\",\r\n    \"lastName\": \"U\",\r\n    \"email\": \"ar@gmail.com\",\r\n    \"pfpURL\": \"1.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Templates",
			"item": [
				{
					"name": "Search Templates",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/templates?skip=0&take=10&title=fizz&content=solution&tags=beginner",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"templates"
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "take",
									"value": "10"
								},
								{
									"key": "title",
									"value": "fizz"
								},
								{
									"key": "content",
									"value": "solution"
								},
								{
									"key": "tags",
									"value": "beginner"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/templates/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"templates",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users Templates",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/templates/users/all",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"templates",
								"users",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Template",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"FizzBuzz Solution\",\n    \"explanation\": \"Solution to handle the true Millennium Prize Problem: fizzbuzz\",\n    \"tags\": \"beginner\",\n    \"code\": \"for (let i = 1; i <= 100; i++) console.log((i % 3 ? '' : 'Fizz') + (i % 5 ? '' : 'Buzz') || i);\",\n    \"language\": \"javascript\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/templates/users/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"templates",
								"users",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fork Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/templates/users/create-fork",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"templates",
								"users",
								"create-fork"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// {",
									"//     \"id\": \"1\",",
									"//     \"privacy\": \"PUBLIC\"",
									"// }",
									"",
									"// {",
									"//     \"id\": \"2\",",
									"//     \"title\": \"FizzBuzz\",",
									"//     \"explanation\": \"Solution to handle fizzbuzz\",",
									"//     \"tags\": \"\",",
									"//     \"code\": \"for (int i = 1; i <= 100; i++) std::cout << (i % 3 == 0 ? \\\"Fizz\\\" : \\\"\\\") << (i % 5 == 0 ? \\\"Buzz\\\" : \\\"\\\") << (i % 3 != 0 && i % 5 != 0 ? std::to_string(i) : \\\"\\\") << \\\"\\\\n\\\";\",",
									"//     \"language\": \"cpp\",",
									"//     \"privacy\": \"PUBLIC\"",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"1\",\n    \"privacy\": \"PUBLIC\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/templates/users/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"templates",
								"users",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Template",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/templates/users/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"templates",
								"users",
								"edit"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}